openapi: '3.0.3'
info:
  title: PlayBingo API
  version: '1.0'
servers:
  - url: https://playbingo.gg/api
tags:
  - name: rooms
    description: Creating, updating, and interacting with rooms
  - name: games
    description: Creating and managing games
components:
  securitySchemes:
    cookieAuthentication:
      description:
        Authentication is handled via session and cookies. Endpoints
        protected by this authentication method are only available to requests
        made by the website.
      type: apiKey
      in: cookie
      name: connect.sid
  responses:
    errorBadRequest:
      description:
        "Bad Request: Required parameters, request body, or body contents are
        missing, malformed, or otherwise invalid, and the client should have
        been able to validate them as such."
    errorUnauthorized:
      description:
        "Unauthorized: The request failed to provide identification in a way the API
        server recognizes."
    errorForbidden:
      description:
        "Forbidden: The provided authorization does not have permission to
        perform the requested action"
    errorNotFound:
      description:
        "Not Found: The requested resource was not found"
    errorServer:
      description:
        "Internal Server Error: The server encountered an error unrelated to the
        contents of the request"
  schemas:
    user:
      type: object
      properties:
        id:
          type: string
          description:
            The user's database UUID
        username:
          type: string
          description:
            The user's name. Usernames are unique across all
            PlayBingo users
        racetimeConnected:
          type: boolean
          description:
            Flag indicating if the user has connected their account to
            racetime.gg in order to use the integration
    roomData:
      type: object
      required:
        - name
        - game
        - slug
        - gameSlug
      properties:
        name:
          type: string
          description: The user given name of the room
        game:
          type: string
          description: The name of the game the room belongs to
        slug:
          type: string
          description:
            The unique identifier for th room, generated by the system
        gameSlug:
          type: string
          description:
            The unique identifier of the game, used to retrieve game resources
            from the server
        roomRacetimeConnection:
          $ref: '#/components/schemas/roomRacetimeConnection'
    roomRacetimeConnection:
      type: object
      required:
        - gameActive
      properties:
        gameActive:
          type: boolean
          description:
            Whether or not the game is enabled for racetime.gg integration and
            properly configured
        url:
          type: string
          description:
            Full url to the connected racetime room. If not set, the room is not
            connected to a racetime room
        websocketConnected:
          type: boolean
          description: 
            True if there is an active websocket connection to the room
        status:
          type: string
          description: Racetime room status
        startDelay:
          type: string
          description: 
            ISO 8601 duration string representing the amount of time between
            ready and start
        started:
          type: string
          description: ISO 8601 date when the race started
        ended:
          type: string
          description: ISO 8601 date when the race ended
paths:
  /me:
    get:
      summary: Get the currently logged in user
      security:
        - cookieAuthentication: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        401:
          $ref: '#/components/responses/errorUnauthorized'
        403:
          $ref: '#/components/responses/errorForbidden'
  /logout:
    post:
      summary: End the current login session
      description:
        Ends the login session of the currently logged in user.
      responses:
        200:
          description: OK
        401:
          $ref: '#/components/responses/errorUnauthorized'
  /rooms:
    get:
      summary: Get a list of rooms
      description:
        Gets the list of rooms known to the server. By default, only
        active rooms are returned.
      tags: 
        - rooms
      parameters:
        - name: inactive
          in: query
          description: Optional - include inactive rooms in the returned list
          schema:
            type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/roomData'
    post:
      summary: Create a new room
      description:
        Creates a new room, initializes it, generates a board, and authorizes
        the creator for access to the room. Returns the room's unique identifier
        and the creators authorization token which can be immediately used in a
        websocket connection.
      tags:
        - rooms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - game
                - nickname
                - password
              properties:
                name:
                  type: string
                  description: The name of the room
                game:
                  type: string
                  description: The slug of the game
                nickname:
                  type: string
                  description: The creator of the room's desired nickname
                password:
                  type: string
                  description: The room password
                generationMode:
                  type: string
                  description:
                    The board generation mode of the room. If not specified, the
                    default value depends on the games configuration. If it is
                    configured for SRLv5, generation will default to SRLv5.
                    Otherwise, the default generation mode is Random
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  slug:
                    type: string
                    description:
                      Unique identifier for the room, which can be used to
                      construct the URL to the room
                  authToken:
                    type: string
                    description:
                      JWT representing the creators authorization to access the
                      newly created room. The token is automatically associated
                      with the identity provided in the request, but can be
                      updated as normal like other auth tokens.
        400:
          $ref: '#/components/responses/errorBadRequest'
        404:
          $ref: '#/components/responses/errorNotFound'
            
